const viewManager={};function goToView(){if(viewManager.cleanViews(),config.urlQuery=utils.processURL(),viewManager.currentView="home",config.urlQuery.view){let newView=config.urlQuery.view;viewManager.currentURL=utils.processURL(),"home"===newView?(viewManager.currentView="home",viewManager.loadView("home",home.setHomePage)):viewManager.goHome()}else viewManager.goHome()}viewManager.currentView=null,viewManager.fadeOutTime=400,viewManager.fadeInTime=400,viewManager.registerView=(view,go=!0,args)=>{console.log(utils.momentGetTimeFormat(moment().format())+": Changing View To "+view),history.pushState(args,"",view),go&&(viewManager.stillWaiting=setTimeout((function(){utils.showLoading("Still working on it...")}),1500),viewManager.hideViews())},viewManager.hideViews=()=>{$("#home").fadeOut(viewManager.fadeOutTime).promise().done((function(){goToView()}))},viewManager.loadView=(viewToLoad,loadFunction)=>{clearTimeout(viewManager.stillWaiting),utils.stopLoading(),$(viewToLoad).delay(viewManager.fadeOutTime).fadeIn(viewManager.fadeInTime).promise().done((function(){clearTimeout(viewManager.stillWaiting),loadFunction(),utils.stopLoading()}))},viewManager.startHistoryListener=()=>{window.onpopstate=event=>{viewManager.hideViews()}},viewManager.cleanViews=()=>{},viewManager.goHome=()=>{consoleLogger("Couldn't find page, returning home..."),viewManager.currentView="station",viewManager.registerView("#station")};